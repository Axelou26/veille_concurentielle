"""
üöÄ Application de Veille Concurrentielle IA
========================================

Interface interactive pour le moteur d'IA de veille concurrentielle
"""

import pandas as pd
from ai_engine import VeilleAIEngine
import logging
from pathlib import Path

def main():
    print("ü§ñ D√©marrage de l'assistant IA de veille concurrentielle...")
    
    # Initialiser le moteur d'IA
    engine = VeilleAIEngine()
    
    # V√©rifier si le fichier de donn√©es existe
    data_file = Path("data.csv")
    if not data_file.exists():
        print("‚ö†Ô∏è Aucun fichier de donn√©es trouv√©.")
        print("üí° Cr√©ons un exemple de donn√©es pour d√©monstration...")
        
        # Cr√©er des donn√©es de d√©monstration
        demo_data = {
            'id': range(1, 6),
            'groupement': ['RESAH', 'UNIHA', 'UGAP', 'RESAH', 'UNIHA'],
            'univers': ['M√©dical', 'Informatique', '√âquipement', 'M√©dical', 'Mobilier'],
            'intitule_lot': [
                '√âquipements d\'imagerie m√©dicale',
                'Serveurs et stockage',
                'V√©hicules √©lectriques',
                'Mat√©riel de laboratoire',
                'Mobilier de bureau ergonomique'
            ],
            'montant_global_estime': [1500000, 800000, 2000000, 300000, 150000],
            'date_limite': ['2025-12-31', '2025-11-30', '2025-10-31', '2025-09-30', '2025-08-31'],
            'statut': ['En cours', 'Attribu√©', 'En cours', 'En cours', 'Attribu√©'],
            'mots_cles': [
                'imagerie,radiologie,scanner',
                'informatique,serveur,stockage',
                'v√©hicule,√©lectrique,mobilit√©',
                'laboratoire,analyse,recherche',
                'mobilier,bureau,ergonomie'
            ]
        }
        df = pd.DataFrame(demo_data)
        df.to_csv(data_file, index=False)
        print("‚úÖ Donn√©es de d√©monstration cr√©√©es!")
    
    # Charger les donn√©es
    print("üìä Chargement des donn√©es...")
    data = pd.read_csv(data_file)
    
    # Initialiser le moteur avec les donn√©es
    print("üîÑ Initialisation du moteur d'IA...")
    engine.initialize(data, load_heavy_models=False)  # D√©sactiver les mod√®les lourds pour le moment
    
    print("\n‚ú® Assistant IA pr√™t !")
    print("""
üí° Exemples de questions :
- "Montre-moi les offres du RESAH"
- "Cherche les lots m√©dicaux"
- "Combien de lots ai-je par univers ?"
- "Analyse la r√©partition des budgets"
    """)
    
    # Boucle interactive
    while True:
        try:
            question = input("\nü§î Votre question (ou 'q' pour quitter) : ")
            
            if question.lower() in ['q', 'quit', 'exit', 'quitter']:
                print("\nüëã Au revoir ! √Ä bient√¥t !")
                break
            
            if question.strip():
                print("\n" + engine.ask_question(question))
            
        except KeyboardInterrupt:
            print("\n\nüëã Au revoir ! √Ä bient√¥t !")
            break
        except Exception as e:
            print(f"\n‚ùå Erreur : {str(e)}")
            print("N'h√©sitez pas √† r√©essayer ou √† reformuler votre question.")

if __name__ == "__main__":
    main()